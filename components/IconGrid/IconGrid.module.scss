.library {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: repeat(6, 1fr);

  p {
    font-size: .9rem;
    font-weight: 500;
  }

  &.compact {
    grid-gap: 10px;
    grid-template-columns: repeat(9, 1fr);

    p {
      font-size: .8rem;
    }
  }

  &.list {
    grid-gap: 5px;
    grid-template-columns: repeat(5, 1fr);

    .libraryIcon {
      flex-direction: row;
      height: 50px;
      justify-content: flex-start;

      svg {
        flex: 1;
      }

      p {
        flex: 3;
        margin: 0 0 0 .5rem;
        text-align: left;
      }
    }
  }

  @media only screen and (max-width: ($tablet-width + 500)) {
    grid-template-columns: repeat(5, 1fr);

    &.compact {
      grid-template-columns: repeat(8, 1fr);
    }

    &.list {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  @media only screen and (max-width: ($tablet-width + 400)) {
    grid-template-columns: repeat(4, 1fr);

    &.compact {
      grid-template-columns: repeat(6, 1fr);
    }

    &.list {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media only screen and (max-width: $tablet-width) {
    grid-template-columns: repeat(3, 1fr);

    &.compact {
      grid-template-columns: repeat(4, 1fr);
    }

    &.list {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media only screen and (max-width: $mobile-width) {
    grid-template-columns: repeat(2, 1fr);

    &.compact {
      grid-template-columns: repeat(3, 1fr);
    }

    &.list {
      grid-template-columns: repeat(1, 1fr);
    }
  }
}

.libraryIcon {
  align-items: center;
  border-radius: 5px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  font-size: 80%;
  height: 130px;
  justify-content: center;
  text-align: center;
  text-decoration: none;
  transition: background-color .2s ease-in-out;

  &:hover {
    background-color: hsl(var(--light-cyan));
  }

  &:focus {
    background-color: hsl(var(--light-cyan));
    outline: 1px solid hsl(var(--cyan));
  }

  svg {
    flex: 2;
  }

  p {
    flex: 1;
    inline-size: 80%;
    margin: 0;
    overflow-wrap: break-word;
  }

  &.deprecated {
    background-color: hsl(var(--red) / 5%);
    outline: 1px solid hsl(var(--red) / 10%);

    &:hover {
      background-color: hsl(var(--red) / 10%);
      outline: 1px solid hsl(var(--red) / 15%);
    }

    &:focus {
      background-color: hsl(var(--red) / 15%);
      outline: 1px solid hsl(var(--red) / 20%);
    }
  }
}
